package engine.env.objects.creatures;

import engine.env.World;
import java.awt.Color;

/**
 * Generic class for Creatures.
 * Creatures have:
 * 1. equipment,
 * 2. body structure and characteristics
 * 3. thoughts - generated by AI, its a queue of actions, creature wants to do in the future
 * @author ogolovin
 */
public class Creature 
{
    public int x;
    public int y;
 
    private char glyph;
    public char glyph() { return glyph; }
 
    private Color color;
    public Color color() { return color; }
 
    public Creature(char glyph, Color color, int maxHp, int attack, int defense)
    {
        this.glyph = glyph;
        this.color = color;
        this.maxHp = maxHp;
        this.hp = maxHp;
        this.attackValue = attack;
        this.defenseValue = defense;
    }
    
    private CreatureAi ai;
    public void setCreatureAi(CreatureAi ai)
    {
        this.ai = ai;
    }



    public void dig(int wx, int wy) 
    {
        world.dig(wx, wy);
    }
    
    public void moveBy(int mx, int my)
    {
        Creature other = world.creature(x+mx, y+my);
        
        if (other == null)
            ai.onEnter(x+mx, y+my, world.tile(x+mx, y+my));
        else
            attack(other);
    }
    
    public void update()
    {
        ai.onUpdate();  
    }
    
    boolean canEnter(int x, int y)
    {
        return world.tile(x, y).isGround();
    }
    
    public void attack(Creature other)
    {
        int amount = Math.max(0, attackValue() - other.defenseValue());
        amount = (int)(Math.random() * amount) + 1;
     
        other.modifyHp(-amount);
        
        doAction("attack the '%s' for %d damage", other.glyph, amount);
    }
 
    public void modifyHp(int amount)
    {
        hp += amount;
     
        if (hp < 1)
        {
            doAction("die");
            world.remove(this);
        }
    }

    
    private int maxHp;
    public int maxHp() { return maxHp; }
 
    private int hp;
    public int hp() { return hp; }
 
    private int attackValue;
    public int attackValue() { return attackValue; }
 
    private int defenseValue;
    public int defenseValue() { return defenseValue; }
    
    public void notify(String message, Object ... params)
    {
        ai.onNotify(String.format(message, params));
    }
    
    public void doAction(String message, Object ... params)
    {
        int r = 9;
        for (int ox = -r; ox < r+1; ox++){
            for (int oy = -r; oy < r+1; oy++){
                if (ox*ox + oy*oy > r*r)
                    continue;
                
                Creature other = world.creature(x+ox, y+oy);
                
                if (other == null)
                    continue;
                
                if (other == this)
                    other.notify("You " + message + ".", params);
                else
                    other.notify(String.format("The '%s' %s.", glyph, makeSecondPerson(message)), params);
            }
        }
    }
    
    private String makeSecondPerson(String text)
    {
        String[] words = text.split(" ");
        words[0] = words[0] + "s";
        
        StringBuilder builder = new StringBuilder();
        for (String word : words){
            builder.append(" ");
            builder.append(word);
        }
        
        return builder.toString().trim();
    }
}
